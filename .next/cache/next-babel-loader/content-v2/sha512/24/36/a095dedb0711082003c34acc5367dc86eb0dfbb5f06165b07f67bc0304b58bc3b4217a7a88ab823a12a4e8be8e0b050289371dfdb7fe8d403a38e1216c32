{"ast":null,"code":"import { get } from \"lodash\";\nvar publicEnvB64 = process.env.NEXT_PUBLIC_ENV;\nvar privateEnvB64 = process.env.PRIVATE_ENV;\nvar publicEnv = JSON.parse(false ? Buffer.from(publicEnvB64, \"base64\").toString(\"utf-8\") : atob(publicEnvB64));\nvar privateEnvVal = JSON.parse(false ? Buffer.from(privateEnvB64, \"base64\").toString(\"utf-8\") : atob(privateEnvB64));\nexport var env = function env(path) {\n  return get(publicEnv, path);\n};\nexport var privateEnv = function privateEnv(path) {\n  return get(privateEnvVal, path);\n};","map":{"version":3,"sources":["/Users/brad/dev/docker-secrets/src/util/env.js"],"names":["get","publicEnvB64","process","env","NEXT_PUBLIC_ENV","privateEnvB64","PRIVATE_ENV","publicEnv","JSON","parse","Buffer","from","toString","atob","privateEnvVal","path","privateEnv"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AAEA,IAAMC,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAAjC;AACA,IAAMC,aAAa,GAAGH,OAAO,CAACC,GAAR,CAAYG,WAAlC;AAEA,IAAMC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAChB,QACIC,MAAM,CAACC,IAAP,CAAYV,YAAZ,EAA0B,QAA1B,EAAoCW,QAApC,CAA6C,OAA7C,CADJ,GAEIC,IAAI,CAACZ,YAAD,CAHQ,CAAlB;AAMA,IAAMa,aAAa,GAAGN,IAAI,CAACC,KAAL,CACpB,QACIC,MAAM,CAACC,IAAP,CAAYN,aAAZ,EAA2B,QAA3B,EAAqCO,QAArC,CAA8C,OAA9C,CADJ,GAEIC,IAAI,CAACR,aAAD,CAHY,CAAtB;AAMA,OAAO,IAAMF,GAAG,GAAG,SAANA,GAAM,CAACY,IAAD;AAAA,SAAUf,GAAG,CAACO,SAAD,EAAYQ,IAAZ,CAAb;AAAA,CAAZ;AACP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACD,IAAD;AAAA,SAAUf,GAAG,CAACc,aAAD,EAAgBC,IAAhB,CAAb;AAAA,CAAnB","sourcesContent":["import { get } from \"lodash\";\n\nconst publicEnvB64 = process.env.NEXT_PUBLIC_ENV;\nconst privateEnvB64 = process.env.PRIVATE_ENV;\n\nconst publicEnv = JSON.parse(\n  typeof window === \"undefined\"\n    ? Buffer.from(publicEnvB64, \"base64\").toString(\"utf-8\")\n    : atob(publicEnvB64)\n);\n\nconst privateEnvVal = JSON.parse(\n  typeof window === \"undefined\"\n    ? Buffer.from(privateEnvB64, \"base64\").toString(\"utf-8\")\n    : atob(privateEnvB64)\n);\n\nexport const env = (path) => get(publicEnv, path);\nexport const privateEnv = (path) => get(privateEnvVal, path);\n"]},"metadata":{},"sourceType":"module"}